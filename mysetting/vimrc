"""to completion 
"set ofu=syntaxcomplete#Complete

runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

let mapleader = ","

"set guifont="courier new":h10:w5
syntax on
filetype indent plugin on


"should use virtual-mode
map <C-W><C-D> :'q,'wd<CR>
map <C-W><C-Y> :'q,'wy<CR>

map ,ll :normal @e<CR>                           | "loop for a @e
map ,mm :call ToggleMouseSetting()<CR>           | "toggle mouse

"alignment
map ,=  :Align \s=\s<CR>

"insert ';' or ','
map  ;; mt])A;<ESC>`t
imap ;; <ESC>mt])A;<ESC>`ta
"map ,, mt]}A,<ESC>`t
"imap ,, <ESC>mt]}A,<ESC>`ta

"session
:nmap ,ss :mksession! ~/.vim/session/
:nmap ,os :so ~/.vim/session/


"--- TAB setting
"quickfix use current tab if exist
set switchbuf=usetab,newtab
map ,nt :set switchbuf=usetab,newtab<CR>         | "new tab
map ,st :set switchbuf=usetab<CR>               | "same tab

"mapping
:nmap gf <c-w>gf
:nmap <c-l> :tabn<CR>
:nmap <c-h> :tabp<CR>
:nmap ,ta :tab sball<CR>

" Uncomment the following to have Vim jump to the last position when                                                       
" reopening a file
if has("autocmd")
   au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" Use pathogen to load plugins from bundle directory
"filetype off
"call pathogen#incubate()
"call pathogen#helptags()
"filetype on

" auto indent
"map ,= gg=G

map ,b :'<,'>normal 




"set filename
set isfname-=,:

"set path for Linux command execution
set path+=.,~/public_html,~/public_html/application,~,~/project/tz/application,~/project/rails/buzzstarter

"auto reload
":set ar

"NERDTree plugin
map ,nt :call CdToCurrentPath()<CR>

"map GIT (vcscommand plugin)
map ,gd :call ExecuteVCSCommand("VCSDiff")<CR>
map ,gl :call ExecuteVCSCommand("VCSLog")<CR>
map ,gb :call ExecuteVCSCommand("VCSBlame")<CR>

"avoid mapping
let VCSCommandDisableExtensionMappings=1
let VCSCommandDisableMappings=1

set t_Co=256
let g:CSApprox_konsole = 1

set guifont="ubuntu mono":h11:w5


so ~/.vim/mysetting/neocomplcache.vim
"so ~/.vim/mysetting/neocomplete.vim
"so ~/.vim/mysetting/fold.vim
so ~/.vim/mysetting/unicode.vim
so ~/.vim/mysetting/php.vim
so ~/.vim/mysetting/web.vim
so ~/.vim/mysetting/function.vim
so ~/.vim/mysetting/ack.vim
so ~/.vim/mysetting/ctrlp.vim
so ~/.vim/mysetting/gvim.vim
so ~/.vim/mysetting/syntastic.vim
so ~/.vim/mysetting/rails.vim
so ~/.vim/mysetting/cscope.vim
so ~/.vim/mysetting/surround.vim
so ~/.vim/mysetting/refresh.vim
so ~/.vim/mysetting/ultisnips.vim
so ~/.vim/mysetting/supertab.vim
so ~/.vim/mysetting/colorstheme.vim
so ~/.vim/mysetting/javascript.vim
so ~/.vim/mysetting/auto_pairs.vim
so ~/.vim/mysetting/emmet.vim
so ~/.vim/mysetting/nerdcommenter.vim
so ~/.vim/mysetting/autotag.vim

map ,gf :Gitv!<CR>

""auto close
"inoremap {      {}<Left>
"inoremap {<CR>  {<CR>}<Esc>O
"inoremap {{     {
"inoremap {}     {}
"inoremap [      []<Left>
"inoremap []     []<Left>

map <c-j> :normal $V%,cc<CR>:normal $%<CR>
map <c-k> :normal $V%,c <CR>
map <c-J> :normal V%,cc<CR>:normal $%<CR>
map <c-K> :normal V%,c <CR>
"map == :normal V%=<CR>%
map == =%
map ,yj :normal V%y<CR>
map ,dj :normal V%d<CR>
map ''  ysiw'
map ""  ysiw"
map vv  [mV]M
map v{  [{V%

map <F2> :w<CR>
imap <F2> <ESC>:w<CR>a
runtime macros/matchit.vim
"autocmd FileType html let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xhtml let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xml let b:match_words = '<\(\w\w*\):</\1,{:}'

"Indent
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
set wrap! nu nobackup writebackup
set iskeyword+=-

set autoread
au CursorHold * checktime

"for fish-shell
set shell=/bin/bash 
set ignorecase infercase
set incsearch hlsearch
"set cmdheight=2
set cursorline
set ruler
set nocompatible
set nolist
set nostartofline
