"set guifont="courier new":h10:w5
syntax on
filetype indent plugin on

"--------- Plugin manager load
autocmd FileType javascript,jsx,javascript.jsx packadd vim-javascript
autocmd FileType javascript,jsx,javascript.jsx packadd jshint2.vim
autocmd FileType javascript,jsx,javascript.jsx packadd vim-node
autocmd FileType javascript,jsx,javascript.jsx packadd vim-jsx
autocmd FileType javascript,jsx,javascript.jsx packadd vim-es6
autocmd FileType javascript,jsx,javascript.jsx packadd vim-flow
autocmd FileType javascript,jsx,javascript.jsx packadd vim-backbone

autocmd FileType coffee packadd vim-coffee-script

autocmd FileType ruby,erb packadd vim-cucumber
autocmd FileType ruby,erb packadd vim-ruby
autocmd FileType ruby,erb packadd vim-rails
autocmd FileType ruby,erb packadd xmledit
autocmd FileType ruby,erb packadd vim-ruby-refactoring
autocmd FileType ruby,erb packadd vim-bundler
autocmd FileType ruby,erb,slim packadd vim-slim

autocmd FileType ruby packadd vim-dispatch

autocmd FileType html,xml packadd vim-haml
autocmd FileType html,xml packadd xml.vim
autocmd FileType html,xml packadd scss-syntax.vim

autocmd FileType html,xml packadd emmet-vim

autocmd FileType css,scss,sass packadd vim-css-color

autocmd FileType verilog,systemverilog packadd systemverilog.vim

:packadd ctrlp.vim
:packadd vim-surround
:packadd lightline.vim
:packadd AutoTag
:packadd ultisnips
:packadd vim-less
:packadd nerdtree
:packadd neocomplcache
:packadd vim-fugitive
:packadd supertab
:packadd vim-endwise
:packadd syntastic
:packadd ack.vim
:packadd neocomplcache-ultisnips
:packadd auto-pairs
:packadd nerdcommenter
:packadd vim-sensible
:packadd vim-sleuth
:packadd gitv
:packadd rainbow_parentheses.vim
:packadd vim-slime
:packadd vim-snippets
:packadd vim-projectroot
:packadd indentLine
:packadd oceanic-next
:packadd vim-bookmarks
:packadd Align
:packadd csapprox
:packadd cscope.vim
:packadd sudo.vim
:packadd SyntaxComplete
:packadd taglist.vim
:packadd vcscommand.vim

"Color theme
"Plug 'jonathanfilip/vim-lucius'
"Plug 'w0ng/vim-hybrid'
"Plug 'junegunn/seoul256.vim'
"Plug 'nanotech/jellybeans.vim'
"Plug 'altercation/vim-colors-solarized'
"--------- Plugin manager end

let mapleader = ","

"Indent
"set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
set wrap! nu nobackup writebackup

"should use virtual-mode
map <C-W><C-D> :'q,'wd<CR>
map <C-W><C-Y> :'q,'wy<CR>

map ,ll :normal @e<CR>                           | "loop for a @e

let NERDTreeMouseMode=3                          | "allow to single click to open a node
let g:NERDTreeDirArrows=0                        | "avoid issue that can not navigate to some folders
map ,mm :call ToggleMouseSetting()<CR>           | "toggle mouse

" map double click to open a file
":nnoremap <2-LeftMouse> :normal gf<CR>

"clipboard
set clipboard=autoselect

"alignment
map ,=  :Align \s=\s<CR>

"insert ';' or ','
map  ;; mt])A;<ESC>`t
imap ;; <ESC>mt])A;<ESC>`ta
"map ,, mt]}A,<ESC>`t
"imap ,, <ESC>mt]}A,<ESC>`ta

"session
:nmap ,ss :mksession! ~/.vim/session/
:nmap ,os :so ~/.vim/session/


"--- TAB setting
"quickfix use current tab if exist
"set switchbuf=usetab,newtab
set switchbuf=usetab
map ,nt :set switchbuf=usetab,newtab<CR>         | "new tab
map ,st :set switchbuf=usetab<CR>               | "same tab

"mapping
:nmap <c-l> :tabn<CR>
:nmap <c-h> :tabp<CR>
:nmap ,ta :tab sball<CR>

" Uncomment the following to have Vim jump to the last position when                                                       
" reopening a file
if has("autocmd")
   au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" Use pathogen to load plugins from bundle directory
"filetype off
"call pathogen#incubate()
"filetype on

" auto indent
"map ,= gg=G

map ,b :'<,'>normal 




"set filename
set isfname-=,:

"set path for Linux command execution
set path+=.

"auto reload
":set ar

"NERDTree plugin
map ,nt :call CdToCurrentPath()<CR>

let g:gitdir = systemlist('git rev-parse --show-toplevel')[0]
map ,cr :execute "cd " g:gitdir<CR>

"map GIT (vcscommand plugin)
map ,gd :call ExecuteVCSCommand("VCSDiff")<CR>
map ,gl :call ExecuteVCSCommand("VCSLog")<CR>
map ,gb :call ExecuteVCSCommand("VCSBlame")<CR>

"avoid mapping
let VCSCommandDisableExtensionMappings=1
let VCSCommandDisableMappings=1

set t_Co=256
let g:CSApprox_konsole = 1

set guifont="ubuntu mono":h11:w5

"verilog
autocmd FileType verilog let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"' }
"""

"do not hide quote in JSON
set conceallevel=0

so ~/.vim/mysetting/neocomplcache.vim
so ~/.vim/mysetting/fold.vim
so ~/.vim/mysetting/unicode.vim
"so ~/.vim/mysetting/php.vim
so ~/.vim/mysetting/web.vim
so ~/.vim/mysetting/function.vim
so ~/.vim/mysetting/ack.vim
so ~/.vim/mysetting/ctrlp.vim
so ~/.vim/mysetting/gvim.vim
so ~/.vim/mysetting/syntastic.vim
so ~/.vim/mysetting/rails.vim
so ~/.vim/mysetting/cscope.vim
so ~/.vim/mysetting/surround.vim
so ~/.vim/mysetting/refresh.vim
so ~/.vim/mysetting/ultisnips.vim
so ~/.vim/mysetting/supertab.vim
so ~/.vim/mysetting/colorstheme.vim
so ~/.vim/mysetting/javascript.vim
so ~/.vim/mysetting/auto_pairs.vim
so ~/.vim/mysetting/emmet.vim
so ~/.vim/mysetting/nerdcommenter.vim
so ~/.vim/mysetting/autotag.vim
so ~/.vim/mysetting/rainbow.vim
so ~/.vim/mysetting/slime.vim
so ~/.vim/mysetting/indentLine.vim
so ~/.vim/mysetting/snippets.vim
so ~/.vim/mysetting/flow.vim
so ~/.vim/mysetting/bookmark.vim

map ,gf :Gitv!<CR>

""auto close
"inoremap {      {}<Left>
"inoremap {<CR>  {<CR>}<Esc>O
"inoremap {{     {
"inoremap {}     {}
"inoremap [      []<Left>
"inoremap []     []<Left>

map <c-j> :normal $V%,cc<CR>:normal $%<CR>
map <c-k> :normal $V%,c <CR>
map <c-J> :normal V%,cc<CR>:normal $%<CR>
map <c-K> :normal V%,c <CR>
"map == :normal V%=<CR>%
map == =%
map ,yj :normal V%y<CR>
map ,dj :normal V%d<CR>
map ''  ysiw'
map ""  ysiw"
map vv  [mV]M
map v{  [{V%

"set paste
map <leader>pp :set invpaste<CR>

map <F2> :update<CR>
imap <F2> <ESC>:update<CR>
runtime macros/matchit.vim
"autocmd FileType html let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xhtml let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xml let b:match_words = '<\(\w\w*\):</\1,{:}'

set iskeyword+=-

set autoread
au CursorHold * checktime

"for fish-shell
set shell=/bin/bash 
set ignorecase infercase
set incsearch hlsearch
"set cmdheight=2
set cursorline
set ruler
set nocompatible
set nolist
set nostartofline

set autowriteall

"no flash
let belloff="all"
set novisualbell

map ,nn :set invnu<CR>
map ,ww :set invwrap<CR>
map ,cd :call CdToCurrentPath()<CR>

"replace tab by spaces
map ,<tab><tab> :set tabstop=2 softtabstop=2 noexpandtab<CR>:retab!<CR>:set expandtab<CR>:retab!<CR>

"add js/erb subfix
"set autochdir
"set suffixesadd+=.js,.erb,.jsx
nmap gf <c-w>gf
"autocmd FileType javascript.jsx set includeexpr=

noremap + :
